{"version":3,"sources":["WeightsInputScreen.js","LuggageCalculator.js","PaymentScreen.js","App.js","index.js"],"names":["WeightsInputScreen","_ref","peopleList","onWeightsChange","onWeightsSubmit","checkInBoothId","onCheckInBoothIdChange","onPersonDetailsChange","onShowTicket","handlePersonDetailsChangeLocal","personIndex","field","value","React","createElement","Container","fluid","className","Row","Col","xs","md","Form","Label","FormControl","type","onChange","e","target","placeholder","maxLength","style","width","lg","Table","bordered","hover","responsive","map","person","key","name","passportNumber","weights","weight","weightIndex","min","Button","variant","onClick","handleSubmit","disabled","amountPaid","readOnly","transactionId","LuggageCalculator","weightsInput","onBack","onPay","data","setData","useState","rules","setRules","loading","setLoading","error","setError","minimumAmount","setMinimumAmount","userDefinedAmount","setUserDefinedAmount","useEffect","fetch","then","response","ok","Error","status","statusText","json","rulesData","catch","err","console","marginBottom","message","marginTop","handlePayMinimum","marginRight","handlePayUserDefined","PaymentScreen","amount","onPaymentAccepted","onPaymentDeclined","App","currentScreen","setCurrentScreen","selectedWeights","setSelectedWeights","selectedPersonIndex","setSelectedPersonIndex","setPeopleList","Array","fill","setCheckInBoothId","paymentAmount","setPaymentAmount","handleWeightsChange","newPeopleList","parsedWeights","w","parseFloat","handlePersonDetailsChange","handleBackToInput","handlePay","handlePaymentAccepted","timestamp","Date","now","toString","randomNum","Math","floor","random","slice","padEnd","generateUniqueId","handlePayment","handlePaymentDeclined","ReactDOM","render","BrowserRouter","basename","document","getElementById"],"mappings":"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","file":"static/js/main.31294796.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, FormGroup, FormControl, Button, Table, Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction WeightsInputScreen({\r\n  peopleList,\r\n  onWeightsChange,\r\n  onWeightsSubmit,\r\n  checkInBoothId,\r\n  onCheckInBoothIdChange,\r\n  onPersonDetailsChange,\r\n  onShowTicket,  // New prop for showing ticket\r\n}) {\r\n  const handleSubmit = (personIndex) => {\r\n    onWeightsSubmit(personIndex);\r\n  };\r\n\r\n  const handlePersonDetailsChangeLocal = (personIndex, field, value) => {\r\n    onPersonDetailsChange(personIndex, field, value);\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"px-0\">\r\n      <Row className=\"align-items-center mb-4 mx-0\">\r\n        <Col xs={12} md={7} className=\"text-center text-md-left mb-3 mb-md-0\">\r\n          <h1>Enter Weights for Each Person</h1>\r\n        </Col>\r\n        <Col xs={12} md={2} className=\"d-flex justify-content-center justify-content-md-end mb-3 mb-md-0\">\r\n          <Form.Label className=\"font-weight-bold mb-0\">Check-in Booth ID:</Form.Label>\r\n        </Col>\r\n        <Col xs={12} md={2} className=\"d-flex justify-content-center justify-content-md-start\">\r\n          <FormControl\r\n            type=\"text\"\r\n            value={checkInBoothId}\r\n            onChange={(e) => onCheckInBoothIdChange(e.target.value)}\r\n            placeholder=\"Enter 10-digit ID\"\r\n            maxLength=\"10\"\r\n            style={{ width: '200px' }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"justify-content-center mx-0\">\r\n        <Col xs={12} lg={12}>\r\n          <Table bordered hover responsive className=\"text-center\">\r\n            <thead className=\"thead-dark\">\r\n              <tr>\r\n\t\t\t  <th style={{ width: '3%' }}>#</th>\r\n\t\t\t  <th style={{ width: '15%' }}>Full Name</th>\r\n\t\t\t  <th style={{ width: '15%' }}>Passport Number</th>\r\n\t\t\t  <th style={{ width: '6%' }}>W1</th>\r\n\t\t\t  <th style={{ width: '6%' }}>W2</th>\r\n\t\t\t  <th style={{ width: '6%' }}>W3</th>\r\n\t\t\t  <th style={{ width: '6%' }}>W4</th>\r\n\t\t\t  <th style={{ width: '6%' }}>W5</th>\r\n\t\t\t  <th style={{ width: '8%' }}>Submit</th>\r\n\t\t\t  <th style={{ width: '8%' }}>Amount Paid</th>\r\n\t\t\t  <th style={{ width: '21%' }}>Transaction ID</th>\r\n              <th style={{ width: '8%' }}>Print Ticket</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {peopleList.map((person, personIndex) => (\r\n                <tr key={personIndex}>\r\n                  <td>{personIndex + 1}</td>\r\n                  <td>\r\n                    <FormControl\r\n                      type=\"text\"\r\n                      value={person.name}\r\n                      onChange={(e) => handlePersonDetailsChangeLocal(personIndex, 'name', e.target.value)}\r\n                      placeholder=\"Full Name\"\r\n                      maxLength=\"30\"\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <FormControl\r\n                      type=\"text\"\r\n                      value={person.passportNumber}\r\n                      onChange={(e) => handlePersonDetailsChangeLocal(personIndex, 'passportNumber', e.target.value)}\r\n                      placeholder=\"Passport Number\"\r\n                      maxLength=\"30\"\r\n                    />\r\n                  </td>\r\n                  {person.weights.map((weight, weightIndex) => (\r\n                    <td key={weightIndex}>\r\n                      <FormControl\r\n                        type=\"number\"\r\n                        value={weight}\r\n                        onChange={(e) => onWeightsChange(personIndex, weightIndex, e.target.value)}\r\n                        placeholder={`W${weightIndex + 1}`}\r\n                        min=\"0\"\r\n                      />\r\n                    </td>\r\n                  ))}\r\n                  <td>\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={() => handleSubmit(personIndex)}\r\n                      disabled={!person.name || !person.passportNumber || !checkInBoothId}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </td>\r\n                  <td>\r\n                    <FormControl type=\"text\" value={person.amountPaid} readOnly placeholder=\"Amount Paid\" />\r\n                  </td>\r\n                  <td>\r\n                    <FormControl type=\"text\" value={person.transactionId} readOnly placeholder=\"Transaction ID\" />\r\n                  </td>\r\n                  <td>\r\n                    <Button\r\n                      variant=\"secondary\"\r\n                      onClick={() => onShowTicket(personIndex)}  // Show ticket on click\r\n                      disabled={!person.transactionId}  // Disable if no transaction ID\r\n                    >\r\n                      Print\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default WeightsInputScreen;\r\n","// src/LuggageCalculator.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction LuggageCalculator({ weightsInput, personIndex, onBack, onPay, checkInBoothId }) {\r\n  const [data, setData] = useState([]);\r\n  const [rules, setRules] = useState([]);\r\n  const [loading, setLoading] = useState(false); \r\n  const [error, setError] = useState(null);     \r\n  const [minimumAmount, setMinimumAmount] = useState(null);\r\n  const [userDefinedAmount, setUserDefinedAmount] = useState(null);\r\n\r\n  // Fetch rules from the backend when the component mounts\r\n  useEffect(() => {\r\n    fetch('http://localhost:9999/payara/luggage-calculator/rules')\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch rules: ${response.status} ${response.statusText}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((rulesData) => {\r\n        setRules(rulesData);\r\n      })\r\n      .catch((err) => {\r\n        console.error('Error fetching rules:', err);\r\n        setError(err);\r\n      });\r\n  }, []);\r\n\r\n  const handlePayMinimum = () => {\r\n    if (minimumAmount !== null) {\r\n      onPay(personIndex, minimumAmount);\r\n    }\r\n  };\r\n\r\n  const handlePayUserDefined = () => {\r\n    if (userDefinedAmount !== null) {\r\n      onPay(personIndex, userDefinedAmount);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"text-center\">Luggage Calculator</h1>\r\n      <div className=\"text-right\" style={{ marginBottom: '20px' }}>\r\n        <button onClick={onBack} className=\"btn btn-default\">\r\n          Back to Input\r\n        </button>\r\n      </div>\r\n\r\n      {loading && <div className=\"alert alert-info\"><strong>Loading...</strong></div>}\r\n      {error && <div className=\"alert alert-danger\"><strong>Error:</strong> {error.message}</div>}\r\n\r\n      <div className=\"text-center\" style={{ marginTop: '20px' }}>\r\n        <button onClick={handlePayMinimum} className=\"btn btn-primary\" style={{ marginRight: '10px' }}>\r\n          Pay Minimum\r\n        </button>\r\n        <button onClick={handlePayUserDefined} className=\"btn btn-primary\">\r\n          Pay User Defined\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LuggageCalculator;\r\n","// src/PaymentScreen.js\r\nimport React from 'react';\r\n\r\nfunction PaymentScreen({ amount, onPaymentAccepted, onPaymentDeclined }) {\r\n  return (\r\n    <div className=\"container text-center\">\r\n      <h1>Payment</h1>\r\n      <p>Amount to be paid: <strong>${amount}</strong></p>\r\n\r\n      <div className=\"payment-methods\">\r\n        <h3>Select Payment Method</h3>\r\n        <div>\r\n          <button className=\"btn btn-primary\" style={{ marginRight: '10px' }}>Visa</button>\r\n          <button className=\"btn btn-primary\" style={{ marginRight: '10px' }}>Mastercard</button>\r\n          <button className=\"btn btn-primary\">PayPal</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"payment-actions\" style={{ marginTop: '20px' }}>\r\n        <button\r\n          onClick={onPaymentAccepted}\r\n          className=\"btn btn-success\"\r\n          style={{ marginRight: '10px' }}\r\n        >\r\n          Payment Accepted\r\n        </button>\r\n        <button onClick={onPaymentDeclined} className=\"btn btn-danger\">\r\n          Payment Declined\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentScreen;\r\n","import React, { useState } from 'react';\r\nimport WeightsInputScreen from './WeightsInputScreen';\r\nimport LuggageCalculator from './LuggageCalculator';\r\nimport PaymentScreen from './PaymentScreen';  // New PaymentScreen component\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/payara\">\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\nfunction App() {\r\n  const [currentScreen, setCurrentScreen] = useState('input'); // 'input', 'calculator', 'payment'\r\n  const [selectedWeights, setSelectedWeights] = useState([]);  // Weights selected from Screen 1\r\n  const [selectedPersonIndex, setSelectedPersonIndex] = useState(null); // Index of selected person\r\n  const [peopleList, setPeopleList] = useState(\r\n    Array(5).fill().map(() => ({\r\n      name: '',\r\n      passportNumber: '',\r\n      weights: Array(5).fill(0),\r\n      amountPaid: '',\r\n      transactionId: ''\r\n    }))\r\n  ); // Data for all people\r\n\r\n  const [checkInBoothId, setCheckInBoothId] = useState(''); // Check-in booth ID\r\n\r\n  // Payment state\r\n  const [paymentAmount, setPaymentAmount] = useState(null);\r\n\r\n  const handleWeightsChange = (personIndex, weightIndex, value) => {\r\n    const newPeopleList = [...peopleList];\r\n    newPeopleList[personIndex].weights[weightIndex] = value;\r\n    setPeopleList(newPeopleList);\r\n  };\r\n\r\n  const handleWeightsSubmit = (personIndex) => {\r\n    const parsedWeights = peopleList[personIndex].weights.map((w) => parseFloat(w) || 0);\r\n    setSelectedWeights(parsedWeights);\r\n    setSelectedPersonIndex(personIndex);\r\n    setCurrentScreen('calculator');\r\n  };\r\n\r\n  const handleBackToInput = () => {\r\n    setCurrentScreen('input');\r\n  };\r\n\r\n  const handlePayment = (personIndex, amount, transactionId) => {\r\n    const newPeopleList = [...peopleList];\r\n    newPeopleList[personIndex].amountPaid = amount;\r\n    newPeopleList[personIndex].transactionId = transactionId;\r\n    setPeopleList(newPeopleList);\r\n    setCurrentScreen('calculator'); // Go back to calculator after payment\r\n  };\r\n\r\n  const handleCheckInBoothIdChange = (value) => {\r\n    setCheckInBoothId(value);\r\n  };\r\n\r\n  const handlePersonDetailsChange = (personIndex, field, value) => {\r\n    const newPeopleList = [...peopleList];\r\n    newPeopleList[personIndex][field] = value;\r\n    setPeopleList(newPeopleList);\r\n  };\r\n\r\n  // Navigate to Payment Screen\r\n  const handlePay = (personIndex, amount) => {\r\n    setPaymentAmount(amount);  // Pass the amount to be paid\r\n    setSelectedPersonIndex(personIndex);\r\n    setCurrentScreen('payment');\r\n  };\r\n\r\n  const handlePaymentAccepted = () => {\r\n    const transactionId = generateUniqueId();  // Generate new transaction ID\r\n    handlePayment(selectedPersonIndex, paymentAmount, transactionId);\r\n  };\r\n\r\n  const handlePaymentDeclined = () => {\r\n    // Simply go back to the previous calculator screen without updating payment details\r\n    setCurrentScreen('calculator');\r\n  };\r\n\r\n  // Generate unique transaction ID\r\n  function generateUniqueId() {\r\n    const timestamp = Date.now().toString(); // Milliseconds since epoch\r\n    const randomNum = Math.floor(Math.random() * 1e11).toString(); // Random number up to 11 digits\r\n    let transactionId = (timestamp + randomNum).slice(0, 20).padEnd(20, '0');\r\n    // Append check-in booth ID with a \"-\" separator if provided\r\n    if (checkInBoothId) {\r\n      transactionId += `-${checkInBoothId}`;\r\n    }\r\n    return transactionId;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {currentScreen === 'input' ? (\r\n        <WeightsInputScreen\r\n          peopleList={peopleList}\r\n          onWeightsChange={handleWeightsChange}\r\n          onWeightsSubmit={handleWeightsSubmit}\r\n          checkInBoothId={checkInBoothId}\r\n          onCheckInBoothIdChange={handleCheckInBoothIdChange}\r\n          onPersonDetailsChange={handlePersonDetailsChange}\r\n        />\r\n      ) : currentScreen === 'calculator' ? (\r\n        <LuggageCalculator\r\n          weightsInput={selectedWeights}\r\n          personIndex={selectedPersonIndex}\r\n          onBack={handleBackToInput}\r\n          onPay={handlePay}  // Handle payment navigation\r\n          checkInBoothId={checkInBoothId}\r\n        />\r\n      ) : (\r\n        <PaymentScreen\r\n          amount={paymentAmount}\r\n          onPaymentAccepted={handlePaymentAccepted}  // Navigate back with accepted payment\r\n          onPaymentDeclined={handlePaymentDeclined}  // Navigate back with declined payment\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// src/index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // Import ReactDOM\nimport { BrowserRouter } from 'react-router-dom'; // Import BrowserRouter\nimport App from './App'; // Import your App component\nimport './index.css'; // Import any global styles if you have them\n\nReactDOM.render(\n  <BrowserRouter basename=\"/payara\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root') // Ensure this matches your public/index.html\n);\n"],"sourceRoot":""}