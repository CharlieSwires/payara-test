{"version":3,"sources":["WeightsInputScreen.js","LuggageCalculator.js","PaymentScreen.js","App.js","index.js"],"names":["WeightsInputScreen","_ref","peopleList","onWeightsChange","onWeightsSubmit","checkInBoothId","onCheckInBoothIdChange","onPersonDetailsChange","onShowTicket","handlePersonDetailsChangeLocal","personIndex","field","value","React","createElement","Container","fluid","className","Row","Col","xs","md","Form","Label","FormControl","type","onChange","e","target","placeholder","maxLength","style","width","lg","Table","bordered","hover","responsive","map","person","key","name","passportNumber","weights","weight","weightIndex","min","Button","variant","onClick","handleSubmit","disabled","amountPaid","readOnly","transactionId","LuggageCalculator","weightsInput","onBack","onPayment","data","setData","useState","rules","setRules","loading","setLoading","error","setError","result","setResult","minimumAmount","setMinimumAmount","userDefinedAmount","setUserDefinedAmount","useEffect","fetch","then","response","ok","Error","status","statusText","json","rulesData","catch","err","console","requestData","w","parseFloat","method","headers","Content-Type","body","JSON","stringify","dataWithRules","item","selectedRule","costItem","find","enumeration","amount","generateUniqueId","Date","now","toString","Math","floor","random","slice","padEnd","marginBottom","message","length","index","handleRuleChange","newData","rule","ruleIndex","marginTop","handleCalculateWithRules","filteredData","filter","names","includes","text","resultData","marginRight","handlePayMinimum","alert","handlePayUserDefined","PaymentScreen","onPaymentAccepted","onPaymentDeclined","App","currentScreen","setCurrentScreen","selectedWeights","setSelectedWeights","selectedPersonIndex","setSelectedPersonIndex","setPeopleList","Array","fill","setCheckInBoothId","paymentAmount","setPaymentAmount","handleWeightsChange","newPeopleList","parsedWeights","handlePersonDetailsChange","handleBackToInput","onPay","handlePay","handlePaymentAccepted","timestamp","randomNum","handlePayment","handlePaymentDeclined","ReactDOM","render","BrowserRouter","basename","document","getElementById"],"mappings":"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","file":"static/js/main.1615b8f9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, FormGroup, FormControl, Button, Table, Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction WeightsInputScreen({\r\n  peopleList,\r\n  onWeightsChange,\r\n  onWeightsSubmit,\r\n  checkInBoothId,\r\n  onCheckInBoothIdChange,\r\n  onPersonDetailsChange,\r\n  onShowTicket,  // New prop for showing ticket\r\n}) {\r\n  const handleSubmit = (personIndex) => {\r\n    onWeightsSubmit(personIndex);\r\n  };\r\n\r\n  const handlePersonDetailsChangeLocal = (personIndex, field, value) => {\r\n    onPersonDetailsChange(personIndex, field, value);\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"px-0\">\r\n      <Row className=\"align-items-center mb-4 mx-0\">\r\n        <Col xs={12} md={7} className=\"text-center text-md-left mb-3 mb-md-0\">\r\n          <h1>Enter Weights for Each Person</h1>\r\n        </Col>\r\n        <Col xs={12} md={2} className=\"d-flex justify-content-center justify-content-md-end mb-3 mb-md-0\">\r\n          <Form.Label className=\"font-weight-bold mb-0\">Check-in Booth ID:</Form.Label>\r\n        </Col>\r\n        <Col xs={12} md={2} className=\"d-flex justify-content-center justify-content-md-start\">\r\n          <FormControl\r\n            type=\"text\"\r\n            value={checkInBoothId}\r\n            onChange={(e) => onCheckInBoothIdChange(e.target.value)}\r\n            placeholder=\"Enter 10-digit ID\"\r\n            maxLength=\"10\"\r\n            style={{ width: '200px' }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"justify-content-center mx-0\">\r\n        <Col xs={12} lg={12}>\r\n          <Table bordered hover responsive className=\"text-center\">\r\n            <thead className=\"thead-dark\">\r\n              <tr>\r\n\t\t\t  <th style={{ width: '3%' }}>#</th>\r\n\t\t\t  <th style={{ width: '15%' }}>Full Name</th>\r\n\t\t\t  <th style={{ width: '15%' }}>Passport Number</th>\r\n\t\t\t  <th style={{ width: '6%' }}>W1</th>\r\n\t\t\t  <th style={{ width: '6%' }}>W2</th>\r\n\t\t\t  <th style={{ width: '6%' }}>W3</th>\r\n\t\t\t  <th style={{ width: '6%' }}>W4</th>\r\n\t\t\t  <th style={{ width: '6%' }}>W5</th>\r\n\t\t\t  <th style={{ width: '8%' }}>Submit</th>\r\n\t\t\t  <th style={{ width: '8%' }}>Amount Paid</th>\r\n\t\t\t  <th style={{ width: '21%' }}>Transaction ID</th>\r\n              <th style={{ width: '8%' }}>Print Ticket</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {peopleList.map((person, personIndex) => (\r\n                <tr key={personIndex}>\r\n                  <td>{personIndex + 1}</td>\r\n                  <td>\r\n                    <FormControl\r\n                      type=\"text\"\r\n                      value={person.name}\r\n                      onChange={(e) => handlePersonDetailsChangeLocal(personIndex, 'name', e.target.value)}\r\n                      placeholder=\"Full Name\"\r\n                      maxLength=\"30\"\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <FormControl\r\n                      type=\"text\"\r\n                      value={person.passportNumber}\r\n                      onChange={(e) => handlePersonDetailsChangeLocal(personIndex, 'passportNumber', e.target.value)}\r\n                      placeholder=\"Passport Number\"\r\n                      maxLength=\"30\"\r\n                    />\r\n                  </td>\r\n                  {person.weights.map((weight, weightIndex) => (\r\n                    <td key={weightIndex}>\r\n                      <FormControl\r\n                        type=\"number\"\r\n                        value={weight}\r\n                        onChange={(e) => onWeightsChange(personIndex, weightIndex, e.target.value)}\r\n                        placeholder={`W${weightIndex + 1}`}\r\n                        min=\"0\"\r\n                      />\r\n                    </td>\r\n                  ))}\r\n                  <td>\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      onClick={() => handleSubmit(personIndex)}\r\n                      disabled={!person.name || !person.passportNumber || !checkInBoothId}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </td>\r\n                  <td>\r\n                    <FormControl type=\"text\" value={person.amountPaid} readOnly placeholder=\"Amount Paid\" />\r\n                  </td>\r\n                  <td>\r\n                    <FormControl type=\"text\" value={person.transactionId} readOnly placeholder=\"Transaction ID\" />\r\n                  </td>\r\n                  <td>\r\n                    <Button\r\n                      variant=\"secondary\"\r\n                      onClick={() => onShowTicket(personIndex)}  // Show ticket on click\r\n                      disabled={!person.transactionId}  // Disable if no transaction ID\r\n                    >\r\n                      Print\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default WeightsInputScreen;\r\n","// src/LuggageCalculator.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction LuggageCalculator({ weightsInput, personIndex, onBack, onPayment, checkInBoothId }) {\r\n  const [data, setData] = useState([]);\r\n  const [rules, setRules] = useState([]);\r\n  const [loading, setLoading] = useState(false); \r\n  const [error, setError] = useState(null);     \r\n  const [result, setResult] = useState('');     // For displaying the result from /cost endpoint\r\n  const [minimumAmount, setMinimumAmount] = useState(null);\r\n  const [userDefinedAmount, setUserDefinedAmount] = useState(null);\r\n\r\n  // Fetch rules from the backend when the component mounts\r\n  useEffect(() => {\r\n    fetch('http://localhost:9999/payara/luggage-calculator/rules')\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\r\n            `Failed to fetch rules: ${response.status} ${response.statusText}`\r\n          );\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((rulesData) => {\r\n        setRules(rulesData);\r\n      })\r\n      .catch((err) => {\r\n        console.error('Error fetching rules:', err);\r\n        setError(err);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleSubmit(); // Automatically submit when weightsInput changes\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [weightsInput]);\r\n\r\n  const handleSubmit = () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    setResult(''); // Reset any previous result\r\n\r\n    const requestData = {\r\n      weights: weightsInput.map((w) => parseFloat(w) || 0), // Ensure values are numbers\r\n    };\r\n\r\n    fetch('http://localhost:9999/payara/luggage-calculator/min-cost', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(requestData),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\r\n            `Server error: ${response.status} ${response.statusText}`\r\n          );\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        // Initialize selectedRule for each item\r\n        const dataWithRules = data.map((item) => ({\r\n          ...item,\r\n          selectedRule: '',\r\n        }));\r\n        setData(dataWithRules);\r\n\r\n        // Extract the 'Cost' amount\r\n        const costItem = dataWithRules.find(\r\n          (item) => item.enumeration === 'Cost'\r\n        );\r\n        if (costItem) {\r\n          setMinimumAmount(parseFloat(costItem.amount));\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error('Fetch error:', err);\r\n        setError(err);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleRuleChange = (index, value) => {\r\n    const newData = [...data];\r\n    newData[index].selectedRule = value;\r\n    setData(newData);\r\n  };\r\n\r\n  const handleCalculateWithRules = () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    setResult(''); // Reset any previous result\r\n\r\n    // Filter out the row where Enumeration is 'Cost'\r\n    const filteredData = data.filter((item) => item.enumeration !== 'Cost');\r\n\r\n    // Map the weights and names\r\n    const weights = filteredData.map((item) => parseFloat(item.amount) || 0);\r\n    const names = filteredData.map((item) => item.selectedRule || '');\r\n\r\n    // Check if any rule is not selected\r\n    if (names.includes('')) {\r\n      setError(new Error('Please select a rule for each item.'));\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const requestData = {\r\n      weights: weights,\r\n      names: names,\r\n    };\r\n\r\n    fetch('http://localhost:9999/payara/luggage-calculator/cost', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(requestData),\r\n    })\r\n      .then((response) => {\r\n        return response.text().then((text) => {\r\n          if (!response.ok) {\r\n            // Throw an error with the response text\r\n            throw new Error(\r\n              text || `Server error: ${response.status} ${response.statusText}`\r\n            );\r\n          }\r\n          return text;\r\n        });\r\n      })\r\n      .then((resultData) => {\r\n        setResult(resultData);\r\n        setUserDefinedAmount(parseFloat(resultData)); // Assuming resultData is a numeric string\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error('Fetch error:', err);\r\n        // Set the result to the error message to display it in the Result section\r\n        setResult(err.message);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // Function to generate a unique transaction ID and append the check-in booth ID\r\n  function generateUniqueId() {\r\n    const timestamp = Date.now().toString(); // Milliseconds since epoch\r\n    const randomNum = Math.floor(Math.random() * 1e11).toString(); // Random number up to 11 digits\r\n    let transactionId = (timestamp + randomNum).slice(0, 20).padEnd(20, '0');\r\n    // Append check-in booth ID with a \"-\" separator if provided\r\n    if (checkInBoothId) {\r\n      transactionId += `-${checkInBoothId}`;\r\n    }\r\n    return transactionId;\r\n  }\r\n\r\n  const handlePayMinimum = () => {\r\n    if (minimumAmount !== null) {\r\n      const transactionId = generateUniqueId();\r\n      onPayment(personIndex, minimumAmount, transactionId);\r\n      alert(\r\n        `Payment of ${minimumAmount} processed with Transaction ID: ${transactionId}`\r\n      );\r\n    } else {\r\n      alert('Minimum amount is not available.');\r\n    }\r\n  };\r\n\r\n  const handlePayUserDefined = () => {\r\n    if (userDefinedAmount !== null) {\r\n      const transactionId = generateUniqueId();\r\n      onPayment(personIndex, userDefinedAmount, transactionId);\r\n      alert(\r\n        `Payment of ${userDefinedAmount} processed with Transaction ID: ${transactionId}`\r\n      );\r\n    } else {\r\n      alert('User-defined amount is not available.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"text-center\">Luggage Calculator</h1>\r\n      <div className=\"text-right\" style={{ marginBottom: '20px' }}>\r\n        <button onClick={onBack} className=\"btn btn-default\">\r\n          Back to Input\r\n        </button>\r\n      </div>\r\n\r\n      {loading && (\r\n        <div className=\"alert alert-info\">\r\n          <strong>Loading...</strong>\r\n        </div>\r\n      )}\r\n      {error && (\r\n        <div className=\"alert alert-danger\">\r\n          <strong>Error:</strong> {error.message}\r\n        </div>\r\n      )}\r\n\r\n      {data.length > 0 && (\r\n        <div>\r\n          <h2 className=\"text-center\">Results</h2>\r\n          <table className=\"table table-bordered table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th>Amount</th>\r\n                <th>Enumeration</th>\r\n                <th>Options</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((item, index) => (\r\n                <tr key={index}>\r\n                  <td>{item.amount}</td>\r\n                  <td>{item.enumeration}</td>\r\n                  <td>\r\n                    {item.enumeration !== 'Cost' ? (\r\n                      rules.length > 0 ? (\r\n                        <select\r\n                          value={item.selectedRule || ''}\r\n                          onChange={(e) => handleRuleChange(index, e.target.value)}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"\" disabled>\r\n                            Select Rule\r\n                          </option>\r\n                          {rules.map((rule, ruleIndex) => (\r\n                            <option key={ruleIndex} value={rule}>\r\n                              {rule}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      ) : (\r\n                        'Loading rules...'\r\n                      )\r\n                    ) : (\r\n                      'N/A'\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          <div className=\"text-center\" style={{ marginTop: '20px' }}>\r\n            <button\r\n              onClick={handleCalculateWithRules}\r\n              className=\"btn btn-success\"\r\n              style={{ marginRight: '10px' }}\r\n            >\r\n              Calculate with Rules\r\n            </button>\r\n            {/* Add Pay Buttons */}\r\n            <button\r\n              onClick={handlePayMinimum}\r\n              className=\"btn btn-primary\"\r\n              disabled={minimumAmount === null}\r\n              style={{ marginRight: '10px' }}\r\n            >\r\n              Pay Minimum\r\n            </button>\r\n            <button\r\n              onClick={handlePayUserDefined}\r\n              className=\"btn btn-primary\"\r\n              disabled={userDefinedAmount === null}\r\n            >\r\n              Pay User Defined\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {result && (\r\n        <div className=\"well\" style={{ marginTop: '20px' }}>\r\n          <h2>Calculate with Rules Result</h2>\r\n          <p>{result}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LuggageCalculator;\r\n","// src/PaymentScreen.js\r\nimport React from 'react';\r\n\r\nfunction PaymentScreen({ amount, onPaymentAccepted, onPaymentDeclined }) {\r\n  return (\r\n    <div className=\"container text-center\">\r\n      <h1>Payment</h1>\r\n      <p>Amount to be paid: <strong>${amount}</strong></p>\r\n\r\n      <div className=\"payment-methods\">\r\n        <h3>Select Payment Method</h3>\r\n        <div>\r\n          <button className=\"btn btn-primary\" style={{ marginRight: '10px' }}>Visa</button>\r\n          <button className=\"btn btn-primary\" style={{ marginRight: '10px' }}>Mastercard</button>\r\n          <button className=\"btn btn-primary\">PayPal</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"payment-actions\" style={{ marginTop: '20px' }}>\r\n        <button\r\n          onClick={onPaymentAccepted}\r\n          className=\"btn btn-success\"\r\n          style={{ marginRight: '10px' }}\r\n        >\r\n          Payment Accepted\r\n        </button>\r\n        <button onClick={onPaymentDeclined} className=\"btn btn-danger\">\r\n          Payment Declined\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentScreen;\r\n","import React, { useState } from 'react';\r\nimport WeightsInputScreen from './WeightsInputScreen';\r\nimport LuggageCalculator from './LuggageCalculator';\r\nimport PaymentScreen from './PaymentScreen';  // New PaymentScreen component\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/payara\">\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\nfunction App() {\r\n  const [currentScreen, setCurrentScreen] = useState('input'); // 'input', 'calculator', 'payment'\r\n  const [selectedWeights, setSelectedWeights] = useState([]);  // Weights selected from Screen 1\r\n  const [selectedPersonIndex, setSelectedPersonIndex] = useState(null); // Index of selected person\r\n  const [peopleList, setPeopleList] = useState(\r\n    Array(5).fill().map(() => ({\r\n      name: '',\r\n      passportNumber: '',\r\n      weights: Array(5).fill(0),\r\n      amountPaid: '',\r\n      transactionId: ''\r\n    }))\r\n  ); // Data for all people\r\n\r\n  const [checkInBoothId, setCheckInBoothId] = useState(''); // Check-in booth ID\r\n\r\n  // Payment state\r\n  const [paymentAmount, setPaymentAmount] = useState(null);\r\n\r\n  const handleWeightsChange = (personIndex, weightIndex, value) => {\r\n    const newPeopleList = [...peopleList];\r\n    newPeopleList[personIndex].weights[weightIndex] = value;\r\n    setPeopleList(newPeopleList);\r\n  };\r\n\r\n  const handleWeightsSubmit = (personIndex) => {\r\n    const parsedWeights = peopleList[personIndex].weights.map((w) => parseFloat(w) || 0);\r\n    setSelectedWeights(parsedWeights);\r\n    setSelectedPersonIndex(personIndex);\r\n    setCurrentScreen('calculator');\r\n  };\r\n\r\n  const handleBackToInput = () => {\r\n    setCurrentScreen('input');\r\n  };\r\n\r\n  const handlePayment = (personIndex, amount, transactionId) => {\r\n    const newPeopleList = [...peopleList];\r\n    newPeopleList[personIndex].amountPaid = amount;\r\n    newPeopleList[personIndex].transactionId = transactionId;\r\n    setPeopleList(newPeopleList);\r\n    setCurrentScreen('calculator'); // Go back to calculator after payment\r\n  };\r\n\r\n  const handleCheckInBoothIdChange = (value) => {\r\n    setCheckInBoothId(value);\r\n  };\r\n\r\n  const handlePersonDetailsChange = (personIndex, field, value) => {\r\n    const newPeopleList = [...peopleList];\r\n    newPeopleList[personIndex][field] = value;\r\n    setPeopleList(newPeopleList);\r\n  };\r\n\r\n  // Navigate to Payment Screen\r\n  const handlePay = (personIndex, amount) => {\r\n    setPaymentAmount(amount);  // Pass the amount to be paid\r\n    setSelectedPersonIndex(personIndex);\r\n    setCurrentScreen('payment');\r\n  };\r\n\r\n  const handlePaymentAccepted = () => {\r\n    const transactionId = generateUniqueId();  // Generate new transaction ID\r\n    handlePayment(selectedPersonIndex, paymentAmount, transactionId);\r\n  };\r\n\r\n  const handlePaymentDeclined = () => {\r\n    // Simply go back to the previous calculator screen without updating payment details\r\n    setCurrentScreen('calculator');\r\n  };\r\n\r\n  // Generate unique transaction ID\r\n  function generateUniqueId() {\r\n    const timestamp = Date.now().toString(); // Milliseconds since epoch\r\n    const randomNum = Math.floor(Math.random() * 1e11).toString(); // Random number up to 11 digits\r\n    let transactionId = (timestamp + randomNum).slice(0, 20).padEnd(20, '0');\r\n    // Append check-in booth ID with a \"-\" separator if provided\r\n    if (checkInBoothId) {\r\n      transactionId += `-${checkInBoothId}`;\r\n    }\r\n    return transactionId;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {currentScreen === 'input' ? (\r\n        <WeightsInputScreen\r\n          peopleList={peopleList}\r\n          onWeightsChange={handleWeightsChange}\r\n          onWeightsSubmit={handleWeightsSubmit}\r\n          checkInBoothId={checkInBoothId}\r\n          onCheckInBoothIdChange={handleCheckInBoothIdChange}\r\n          onPersonDetailsChange={handlePersonDetailsChange}\r\n        />\r\n      ) : currentScreen === 'calculator' ? (\r\n        <LuggageCalculator\r\n          weightsInput={selectedWeights}\r\n          personIndex={selectedPersonIndex}\r\n          onBack={handleBackToInput}\r\n          onPay={handlePay}  // Handle payment navigation\r\n          checkInBoothId={checkInBoothId}\r\n        />\r\n      ) : (\r\n        <PaymentScreen\r\n          amount={paymentAmount}\r\n          onPaymentAccepted={handlePaymentAccepted}  // Navigate back with accepted payment\r\n          onPaymentDeclined={handlePaymentDeclined}  // Navigate back with declined payment\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// src/index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // Import ReactDOM\nimport { BrowserRouter } from 'react-router-dom'; // Import BrowserRouter\nimport App from './App'; // Import your App component\nimport './index.css'; // Import any global styles if you have them\n\nReactDOM.render(\n  <BrowserRouter basename=\"/payara\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root') // Ensure this matches your public/index.html\n);\n"],"sourceRoot":""}